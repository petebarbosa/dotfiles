services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - traefik_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - traefik.enable=false

  # Database administration interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@${DOMAIN}
      - PGADMIN_DEFAULT_PASSWORD=${POSTGRES_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`db.${DOMAIN}`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.service=pgadmin-svc
      - traefik.http.routers.pgadmin.tls.certresolver=letsencrypt
      - traefik.http.routers.pgadmin.middlewares=auth
      - traefik.http.services.pgadmin-svc.loadbalancer.server.port=80
    networks:
      - traefik_network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  traefik_network:
    external: true
